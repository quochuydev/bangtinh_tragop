{"version":3,"sources":["components/calculate/number-viewer.container.ts","components/calculate/number-viewer.component.tsx","components/calculate/table-calculate.component.tsx","components/calculate/table-calculate.container.ts","App.tsx","reportWebVitals.ts","reducers/table-calculate.reducer.ts","reducers/index.ts","reducers/number-collection.reducer.ts","api/number-generator.api.ts","sagas/number-collection.sagas.ts","actions.ts","sagas/table-calculate.sagas.ts","sagas/index.ts","store.ts","index.tsx"],"names":["connect","state","numberCollection","dispatch","onRequestNewNumber","type","payload","props","onClick","map","currentNumber","useStyles","makeStyles","theme","createStyles","table","minWidth","formControl","margin","spacing","display","sixPercent","backgroundColor","tenPercent","rowTotal","color","fontWeight","TableCalculateContainer","tableCalculate","onRefreshCalculate","data","calculate","onChangeField","name","value","Number","React","classes","Grid","container","item","sm","FormControl","className","htmlFor","id","customInput","TextField","onValueChange","e","floatValue","carPrice","thousandSeparator","suffix","borrowingPrice","InputLabel","shrink","NativeSelect","month","onChange","target","onChangeSelect","inputProps","prepayPercent","disabled","precentBankBefore","precentBankAfter","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","rows","row","i","length","period","recurring_number","displayType","interest","origin","debt","App","useState","Container","Box","my","Typography","variant","style","textAlign","gutterBottom","Copyright","Link","href","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","roundNumber","input","Math","round","createData","rootReducers","combineReducers","action","discountMonths","console","log","_","pricePerMonth","total_recurring_number","total_interest","data_row","precentBank","debt_last","String","push","initialNumber","generateNewNumber","Promise","resolve","watchNewGeneratedNumberRequestStart","requestNewGeneratedNumber","takeEvery","call","generatedNumber","put","watchCalculate","foo","rootSaga","root","all","fork","sagaMiddleware","createSagaMiddleware","composeEnhancer","compose","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d59835a8.chunk.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport { NumberSetterComponent } from './number-viewer.component';\r\nimport { State } from '../../reducers';\r\nimport { BaseAction } from '../../common'\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  numberCollection: state.numberCollection,\r\n});\r\n\r\nconst numberRequestStartAction = (): BaseAction => ({\r\n  type: 'GET_NUMBER_REQUEST_START',\r\n  payload: {},\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  onRequestNewNumber: () => dispatch(numberRequestStartAction()),\r\n});\r\n\r\nexport const NumberSetterContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NumberSetterComponent);","import * as React from 'react';\r\n\r\ninterface Props {\r\n  onRequestNewNumber: () => void;\r\n  numberCollection: number[];\r\n}\r\n\r\nexport const NumberSetterComponent: React.FunctionComponent<Props> = props => (\r\n  <div>\r\n    <button onClick={props.onRequestNewNumber}>Request new number</button>\r\n    <ul>\r\n      {props.numberCollection.map(currentNumber => (\r\n        <li key={currentNumber}>{currentNumber}</li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);","import * as React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  Input, Table, TableContainer, TableCell, TableRow, TableHead, TableBody,\r\n  MenuItem, Box, Link, Select, Typography, Container, Paper, TextField,\r\n  NativeSelect, FormControl, InputLabel, Grid,\r\n} from '@material-ui/core';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport { TableCalculate } from '../../common'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(2),\r\n    minWidth: 120,\r\n    display: 'grid'\r\n  },\r\n  sixPercent: {\r\n    backgroundColor: '#eee',\r\n  },\r\n  tenPercent: {\r\n    // backgroundColor: '#ddd',\r\n  },\r\n  rowTotal: {\r\n    color: 'red !important' as 'red',\r\n    fontWeight: 'bold !important' as 'bold',\r\n    backgroundColor: 'rgba(206, 17, 38, 0.05)'\r\n  }\r\n}));\r\ninterface Props {\r\n  onRefreshCalculate: (data: any) => void;\r\n  tableCalculate: TableCalculate;\r\n}\r\n\r\nexport const TableCalculateComponent: React.FunctionComponent<Props> = props => {\r\n  let onChangeField = (name: string, value: unknown | null) => {\r\n    value = Number(value);\r\n    if (!value) {\r\n      value = null;\r\n    }\r\n    props.onRefreshCalculate({ [name]: value });\r\n  }\r\n\r\n  let onChangeSelect = (e: React.ChangeEvent<{ name: string, value: unknown }>) => {\r\n    let value = Number(e.target.value)\r\n    props.onRefreshCalculate({ [e.target.name]: value });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    props.onRefreshCalculate({});\r\n  }, [])\r\n\r\n  let months = [\r\n    { value: 12, name: '1 năm (12 tháng)' },\r\n    { value: 24, name: '2 năm (24 tháng)' },\r\n    { value: 36, name: '3 năm (36 tháng)' },\r\n    { value: 48, name: '4 năm (48 tháng)' },\r\n    { value: 60, name: '5 năm (60 tháng)' },\r\n    { value: 72, name: '6 năm (72 tháng)' },\r\n    { value: 84, name: '7 năm (84 tháng)' },\r\n  ]\r\n\r\n  const classes = useStyles();\r\n\r\n  let data = props.tableCalculate;\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={5}>\r\n          <FormControl className={classes.formControl}>\r\n            <label htmlFor=\"carPrice\">Giá xe</label>\r\n            <NumberFormat id=\"carPrice\" customInput={TextField} onValueChange={e => {\r\n              onChangeField('carPrice', e.floatValue);\r\n            }} value={data.carPrice} thousandSeparator={true} suffix={' đ'} />\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <label htmlFor=\"borrowingPrice\">Số tiền cần vay (VNĐ)</label>\r\n            <NumberFormat id=\"borrowingPrice\" customInput={TextField} onValueChange={e => {\r\n              onChangeField('borrowingPrice', e.floatValue);\r\n            }} value={data.borrowingPrice} thousandSeparator={true} suffix={' đ'} />\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel shrink htmlFor=\"month\">\r\n              Thời gian vay (Tháng)\r\n</InputLabel>\r\n            <NativeSelect\r\n              value={data.month}\r\n              onChange={e => { onChangeSelect(e) }}\r\n              inputProps={{ name: 'month', id: 'month', }}>\r\n              {\r\n                months.map(e => <option key={e.value} value={e.value}>{e.name}</option>)\r\n              }\r\n            </NativeSelect>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <label htmlFor=\"prepayPercent\">Trả trước (%)</label>\r\n            <NumberFormat id=\"prepayPercent\" customInput={TextField} onValueChange={e => {\r\n              onChangeField('prepayPercent', e.floatValue);\r\n            }} value={data.prepayPercent} thousandSeparator={true} suffix={' %'} disabled={true} />\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <label htmlFor=\"precentBankBefore\">Lãi suất vay năm (cố định 6 tháng đầu)</label>\r\n            <NumberFormat id=\"precentBankBefore\" customInput={TextField}\r\n              value={data.precentBankBefore * 100} thousandSeparator={true} suffix={' %'} disabled={true} />\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <label htmlFor=\"precentBankAfter\">Lãi suất vay năm (sau điều chỉnh)</label>\r\n            <NumberFormat id=\"precentBankAfter\" customInput={TextField}\r\n              value={data.precentBankAfter * 100} thousandSeparator={true} suffix={' %'} disabled={true} />\r\n          </FormControl>\r\n          <div>\r\n            <h2>Thủ tục mua xe trả góp tại Hino Vĩnh Thịnh:</h2>\r\n            <p>1. Mua xe tại Hino Vĩnh Thịnh</p>\r\n            <p>2. Hino Vĩnh Thịnh chuẩn bị hồ sơ cho khách hàng.</p>\r\n            <p>3. Ngân hàng thẩm định (gọi điện thoại hỏi thăm sau đó sẽ trực tiếp xuống nhà).</p>\r\n            <p>4. Ngân hàng gửi thông báo cho vay đến Hino Vĩnh Thịnh</p>\r\n            <p>5. Hino Vĩnh Thịnh sẽ gửi cho khách hàng và khách hàng thanh toán đợt 2 để tiến hành đóng thùng theo yêu cầu khách hàng và đi đăng kí xe.</p>\r\n            <p>6. Khách hàng kiểm tra xe trước khi giải ngân.</p>\r\n            <p>7. Ngân hàng giải ngân.</p>\r\n            <p>8. Khách hàng nhận toàn bộ hồ sơ xe và nhận xe.</p>\r\n            <p>9. Hoàn thành. Quy trình mua xe trả góp tại Hino Vĩnh Thịnh sẽ hoàn thành từ 20-25 tùy vào dòng xe cũng như thỏa thuận giữa khách hàng và Hino Vĩnh Thịnh.</p>\r\n            <h2>Hồ sơ cần chuẩn bị đối với cá nhân:</h2>\r\n            <p>1. Chứng minh nhân dân hoặc Thẻ căn cước công dân.</p>\r\n            <p> 2. Sổ hộ khẩu.</p>\r\n            <p>3. Giấy đăng kí hết hôn hoặc giấy chứng nhận độc thân.</p>\r\n            <p>4. Hợp đồng mua xe.</p>\r\n            <p>5. Chứng minh thu nhập (có thể có hoặc không).</p>\r\n            <h2>Hồ sơ cần chuẩn bị đối với doanh nghiệp:</h2>\r\n            <p>1. Giấp phép đăng kí kinh doanh (Công ty phải hoạt động trên 6 tháng).</p>\r\n            <p>2. Thông tin của chủ doanh nghiệp.</p>\r\n            <p>3. Báo cáo tài chính gần đây nhất.</p>\r\n            <p>4. Tờ khai quyết toán doanh nghiệp gần đây nhất.</p>\r\n            <p> 5. Điều lệ công ty.</p>\r\n            <p> 6. Hợp đồng mua xe.</p>\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={7}>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"right\">Kỳ</TableCell>\r\n                  <TableCell align=\"right\">Số trả định kỳ</TableCell>\r\n                  <TableCell align=\"right\">Lãi</TableCell>\r\n                  <TableCell align=\"right\">Gốc</TableCell>\r\n                  <TableCell align=\"right\">Dư nợ</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data.rows.map((row, i) => (\r\n                  <TableRow className={classes[(i > 0 && i <= 6) ? 'sixPercent' : (i + 1 == data.rows.length ? 'rowTotal' : 'tenPercent')]}\r\n                    key={row.period}>\r\n                    <TableCell align=\"right\">{row.period}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <NumberFormat value={row.recurring_number} displayType={'text'} thousandSeparator={true} suffix={' đ'} />\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <NumberFormat value={row.interest} displayType={'text'} thousandSeparator={true} suffix={' đ'} />\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <NumberFormat value={row.origin} displayType={'text'} thousandSeparator={true} suffix={' đ'} />\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <NumberFormat value={row.debt} displayType={'text'} thousandSeparator={true} suffix={' đ'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { TableCalculateComponent } from './table-calculate.component';\r\nimport { State } from '../../reducers';\r\nimport { BaseAction, TableCalculate } from '../../common'\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  tableCalculate: state.tableCalculate,\r\n});\r\n\r\nconst calculate = (data: any): BaseAction => ({\r\n  type: 'CALCULATE',\r\n  payload: data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  onRefreshCalculate: (data: any) => dispatch(calculate(data)),\r\n});\r\n\r\nexport const TableCalculateContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TableCalculateComponent);","import React, { useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  Input, Table, TableContainer, TableCell, TableRow, TableHead, TableBody,\r\n  MenuItem, Box, Link, Select, Typography, Container, Paper, TextField,\r\n  NativeSelect, FormControl, InputLabel,\r\n} from '@material-ui/core';\r\n\r\nimport { NumberSetterContainer, TableCalculateContainer } from './components'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  formControl: {\r\n    // margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const initData = {\r\n    carPrice: 0, borrowingPrice: 0, prepayPercent: 0,\r\n  }\r\n  const [data, setData] = useState<{ carPrice: number; borrowingPrice: number; prepayPercent: number }>(initData);\r\n\r\n  const columns = [\r\n    {\r\n      key: 'period', title: 'period'\r\n    },\r\n  ]\r\n\r\n  function createData(period: number, recurring_number: number, interest: number, origin: number, debt: number) {\r\n    return { period, recurring_number, interest, origin, debt };\r\n  }\r\n\r\n  let rows = [\r\n    createData(1, 0, 0, 0, 0),\r\n  ]\r\n\r\n  function refreshCalculate() {\r\n\r\n  }\r\n\r\n  let onChangeField = (e: React.ChangeEvent<{ name: string, value: unknown }>) => {\r\n    const name = e.target.name as keyof typeof data;\r\n    let value: number = Number(e.target.value);\r\n    setData({ ...data, [name]: value });\r\n    refreshCalculate();\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container>\r\n      <Box my={4}>\r\n        <Typography variant=\"h5\" component=\"h5\" style={{ textAlign: 'center' }} gutterBottom>\r\n          BẢNG MINH HỌA SỐ TIỀN GỐC VÀ LÃI PHẢI TRẢ HÀNG THÁNG\r\n        </Typography>\r\n        <TableCalculateContainer />\r\n      </Box>\r\n      <Copyright />\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href={'https://quochuydev.github.io/bangtinh_tragop/'}>\r\n        quochuydev\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}.\r\n    </Typography>\r\n  );\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import { BaseAction, TableCalculate, PeriodLine } from '../common'\r\nimport * as _ from 'lodash';\r\n\r\nexport type TableCalculateState = TableCalculate;\r\n\r\nexport const tableCalculateReducer = (\r\n  state: TableCalculateState = {\r\n    month: 24,\r\n    carPrice: 1200000000,\r\n    borrowingPrice: 240000000,\r\n    prepayPercent: 0,\r\n    rows: [],\r\n    precentBankBefore: 0.0699,\r\n    precentBankAfter: 0.1085,\r\n    discountMonths: 6\r\n  },\r\n  action: BaseAction\r\n) => {\r\n  switch (action.type) {\r\n    case 'CALCULATE_COMPLETED':\r\n      let data = { ...state, ...action.payload };\r\n      data.rows = [];\r\n      if (!data.carPrice) {\r\n        data.prepayPercent = 0;\r\n      } else {\r\n        console.log(action.payload)\r\n        if (_.isEmpty(action.payload) || action.payload['borrowingPrice'] || action.payload['carPrice']) {\r\n          data.prepayPercent = (data.borrowingPrice / data.carPrice) * 100;\r\n        }\r\n      }\r\n      let pricePerMonth = data.borrowingPrice / data.month;\r\n\r\n      data.rows = [createData('', null,null, null, data.borrowingPrice)];\r\n\r\n      let total_recurring_number: number = 0;\r\n      let total_interest: number = 0;\r\n      let total_origin: number = 0;\r\n\r\n      for (let i = 1; i <= data.month; i++) {\r\n        let data_row = {\r\n          precentBank: 0, debt_last: 0, interest: 0, recurring_number: 0, origin: 0, debt: 0,\r\n        };\r\n        if (i <= data.discountMonths) {\r\n          data_row.precentBank = data.precentBankBefore;\r\n        } else {\r\n          data_row.precentBank = data.precentBankAfter;\r\n        }\r\n        data_row.debt_last = data.rows[i - 1]['debt'];\r\n        data_row.interest = data_row.debt_last * data_row.precentBank / 12;\r\n\r\n        data_row.origin = pricePerMonth;\r\n        if (i == data.month) {\r\n          data_row.origin = data_row.debt_last;\r\n        }\r\n\r\n        data_row.recurring_number = data_row.interest + data_row.origin;\r\n        data_row.debt = data_row.debt_last - data_row.origin;\r\n        data_row.debt = roundNumber(data_row.debt);\r\n\r\n        total_recurring_number += data_row.recurring_number;\r\n        total_interest += data_row.interest;\r\n        total_origin += data_row.origin;\r\n        let row = createData(String(i), roundNumber(data_row.recurring_number), roundNumber(data_row.interest), roundNumber(data_row.origin), data_row.debt);\r\n        data.rows.push(row);\r\n      }\r\n      data.rows.push(createData('TOTAL', roundNumber(total_recurring_number), roundNumber(total_interest), roundNumber(data.rows[0]['debt']), null));\r\n      return data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction roundNumber(input: number) {\r\n  return Math.round(input * 1) / 1;\r\n}\r\n\r\nfunction createData(period: string, recurring_number: number | null, interest: number | null, origin: number | null, debt: number | null) {\r\n  return { period, recurring_number, interest, origin, debt };\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport {\r\n  numberCollectionReducer,\r\n  NumberCollectionState,\r\n} from './number-collection.reducer';\r\n\r\nimport {\r\n  tableCalculateReducer,\r\n  TableCalculateState,\r\n} from './table-calculate.reducer';\r\n\r\nexport interface State {\r\n  numberCollection: NumberCollectionState;\r\n  tableCalculate: TableCalculateState;\r\n}\r\n\r\nexport const rootReducers = combineReducers<State>({\r\n  numberCollection: numberCollectionReducer,\r\n  tableCalculate: tableCalculateReducer,\r\n});","import { BaseAction } from '../common'\r\n\r\nexport type NumberCollectionState = number[];\r\n\r\nexport const numberCollectionReducer = (\r\n  state: NumberCollectionState = [0],\r\n  action: BaseAction\r\n) => {\r\n  switch (action.type) {\r\n    case 'GET_NUMBER_REQUEST_COMPLETED':\r\n      return [...state, action.payload];\r\n  }\r\n  return state;\r\n};","let initialNumber = 0;\r\n\r\nexport const generateNewNumber = (): Promise<number> => {\r\n  const promise = new Promise<number>(resolve => {\r\n    initialNumber += 1;\r\n    resolve(initialNumber);\r\n  });\r\n\r\n  return promise;\r\n};","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { numberRequestCompletedAction } from '../actions';\r\nimport { generateNewNumber } from '../api';\r\n\r\nexport function* watchNewGeneratedNumberRequestStart() {\r\n  yield takeEvery(\r\n    'GET_NUMBER_REQUEST_START',\r\n    requestNewGeneratedNumber\r\n  );\r\n}\r\n\r\nfunction* requestNewGeneratedNumber(e: any) {\r\n  switch (e.type) {\r\n    case 'GET_NUMBER_REQUEST_START':\r\n      const generatedNumber = yield call(generateNewNumber);\r\n      yield put(numberRequestCompletedAction(generatedNumber));\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}","import { BaseAction } from './common';\r\n\r\nexport const numberRequestCompletedAction = (\r\n  numberGenerated: number\r\n): BaseAction => ({\r\n  type: 'GET_NUMBER_REQUEST_COMPLETED',\r\n  payload: numberGenerated,\r\n});","import { call, put, takeEvery } from 'redux-saga/effects';\r\n\r\nexport function* watchCalculate() {\r\n  yield takeEvery(\r\n    'CALCULATE',\r\n    foo\r\n  );\r\n}\r\n\r\nfunction* foo(e: any) {\r\n  switch (e.type) {\r\n    case 'CALCULATE':\r\n      yield put({\r\n        type: 'CALCULATE_COMPLETED',\r\n        payload: e.payload,\r\n      });\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}","import { all, fork } from 'redux-saga/effects';\r\nimport { watchNewGeneratedNumberRequestStart } from './number-collection.sagas';\r\nimport { watchCalculate } from './table-calculate.sagas';\r\n\r\nexport const rootSaga = function* root() {\r\n  yield all([fork(watchNewGeneratedNumberRequestStart)]);\r\n  yield all([fork(watchCalculate)]);\r\n};","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { rootReducers } from './reducers';\r\nimport { rootSaga } from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancer = compose;\r\n\r\nexport const store = createStore(\r\n  rootReducers,\r\n  {},\r\n  composeEnhancer(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}