{"version":3,"sources":["components/calculate/number-viewer.container.ts","components/calculate/number-viewer.component.tsx","components/calculate/table-calculate.component.tsx","components/calculate/table-calculate.container.ts","App.tsx","reportWebVitals.ts","reducers/table-calculate.reducer.ts","reducers/index.ts","reducers/number-collection.reducer.ts","api/number-generator.api.ts","sagas/number-collection.sagas.ts","actions.ts","sagas/table-calculate.sagas.ts","sagas/index.ts","store.ts","index.tsx"],"names":["connect","state","numberCollection","dispatch","onRequestNewNumber","type","payload","props","onClick","map","currentNumber","useStyles","makeStyles","theme","createStyles","table","minWidth","formControl","TableCalculateContainer","tableCalculate","onRefreshCalculate","data","calculate","onChangeNumber","e","value","Number","target","name","React","classes","FormControl","className","InputLabel","shrink","htmlFor","NativeSelect","month","onChange","onChangeSelect","inputProps","id","TextField","label","carPrice","borrowingPrice","prepayPercent","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","rows","row","period","recurring_number","interest","origin","debt","App","useState","Container","Box","my","Typography","variant","gutterBottom","Copyright","color","Link","href","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","roundNumber","input","Math","round","createData","rootReducers","combineReducers","action","precentBankBefore","precentBankAfter","discountMonths","console","log","_","pricePerMonth","i","data_row","precentBank","debt_last","push","initialNumber","generateNewNumber","Promise","resolve","watchNewGeneratedNumberRequestStart","requestNewGeneratedNumber","takeEvery","call","generatedNumber","put","watchCalculate","foo","rootSaga","root","all","fork","sagaMiddleware","createSagaMiddleware","composeEnhancer","compose","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dab4206.chunk.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport { NumberSetterComponent } from './number-viewer.component';\r\nimport { State } from '../../reducers';\r\nimport { BaseAction } from '../../common'\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  numberCollection: state.numberCollection,\r\n});\r\n\r\nconst numberRequestStartAction = (): BaseAction => ({\r\n  type: 'GET_NUMBER_REQUEST_START',\r\n  payload: {},\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  onRequestNewNumber: () => dispatch(numberRequestStartAction()),\r\n});\r\n\r\nexport const NumberSetterContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NumberSetterComponent);","import * as React from 'react';\r\n\r\ninterface Props {\r\n  onRequestNewNumber: () => void;\r\n  numberCollection: number[];\r\n}\r\n\r\nexport const NumberSetterComponent: React.FunctionComponent<Props> = props => (\r\n  <div>\r\n    <button onClick={props.onRequestNewNumber}>Request new number</button>\r\n    <ul>\r\n      {props.numberCollection.map(currentNumber => (\r\n        <li key={currentNumber}>{currentNumber}</li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);","import * as React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  Input, Table, TableContainer, TableCell, TableRow, TableHead, TableBody,\r\n  MenuItem, Box, Link, Select, Typography, Container, Paper, TextField,\r\n  NativeSelect, FormControl, InputLabel,\r\n} from '@material-ui/core';\r\nimport { TableCalculate } from '../../common'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  formControl: {\r\n    // margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\ninterface Props {\r\n  onRefreshCalculate: (data: any) => void;\r\n  tableCalculate: TableCalculate;\r\n}\r\n\r\nexport const TableCalculateComponent: React.FunctionComponent<Props> = props => {\r\n  let onChangeNumber = (e: React.ChangeEvent<{ name: string, value: unknown }>) => {\r\n    let value = Number(e.target.value);\r\n    if (!value) {\r\n      value = 0;\r\n    }\r\n    props.onRefreshCalculate({ [e.target.name]: value });\r\n  }\r\n\r\n  let onChangeSelect = (e: React.ChangeEvent<{ name: string, value: unknown }>) => {\r\n    let value = Number(e.target.value)\r\n    props.onRefreshCalculate({ [e.target.name]: value });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    props.onRefreshCalculate({});\r\n  }, [])\r\n\r\n  let months = [\r\n    { value: 12, name: '1 năm (12 tháng)' },\r\n    { value: 24, name: '2 năm (24 tháng)' },\r\n    { value: 36, name: '3 năm (36 tháng)' },\r\n    { value: 48, name: '4 năm (48 tháng)' },\r\n    { value: 60, name: '5 năm (60 tháng)' },\r\n    { value: 72, name: '6 năm (72 tháng)' },\r\n    { value: 84, name: '7 năm (84 tháng)' },\r\n  ]\r\n\r\n  const classes = useStyles();\r\n\r\n  let data = props.tableCalculate;\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n          Thời gian vay (Tháng)\r\n        </InputLabel>\r\n        <NativeSelect\r\n          value={data.month}\r\n          onChange={e => { onChangeSelect(e) }}\r\n          inputProps={{ name: 'month', id: 'age-native-label-placeholder', }}>\r\n          {\r\n            months.map(e => <option key={e.value} value={e.value}>{e.name}</option>)\r\n          }\r\n        </NativeSelect>\r\n      </FormControl>\r\n\r\n      <TextField id=\"carPrice\" label=\"Giá xe\" value={data.carPrice}\r\n        type=\"number\" name=\"carPrice\" onChange={onChangeNumber} />\r\n\r\n      <TextField id=\"borrowingPrice\" label=\"Số tiền cần vay (VNĐ)\" value={data.borrowingPrice}\r\n        type=\"number\" name=\"borrowingPrice\" onChange={onChangeNumber} />\r\n\r\n      <TextField id=\"prepayPercent\" label=\"Trả trước (%)\" value={data.prepayPercent}\r\n        type=\"number\" name=\"prepayPercent\" onChange={onChangeNumber} />\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"right\">Kỳ</TableCell>\r\n              <TableCell align=\"right\">Số trả định kỳ</TableCell>\r\n              <TableCell align=\"right\">Lãi</TableCell>\r\n              <TableCell align=\"right\">Gốc</TableCell>\r\n              <TableCell align=\"right\">Dư nợ</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.rows.map((row) => (\r\n              <TableRow key={row.period}>\r\n                <TableCell align=\"right\">{row.period}</TableCell>\r\n                <TableCell align=\"right\">{row.recurring_number}</TableCell>\r\n                <TableCell align=\"right\">{row.interest}</TableCell>\r\n                <TableCell align=\"right\">{row.origin}</TableCell>\r\n                <TableCell align=\"right\">{row.debt}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { TableCalculateComponent } from './table-calculate.component';\r\nimport { State } from '../../reducers';\r\nimport { BaseAction, TableCalculate } from '../../common'\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  tableCalculate: state.tableCalculate,\r\n});\r\n\r\nconst calculate = (data: any): BaseAction => ({\r\n  type: 'CALCULATE',\r\n  payload: data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  onRefreshCalculate: (data: any) => dispatch(calculate(data)),\r\n});\r\n\r\nexport const TableCalculateContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TableCalculateComponent);","import React, { useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  Input, Table, TableContainer, TableCell, TableRow, TableHead, TableBody,\r\n  MenuItem, Box, Link, Select, Typography, Container, Paper, TextField,\r\n  NativeSelect, FormControl, InputLabel,\r\n} from '@material-ui/core';\r\n\r\nimport { NumberSetterContainer, TableCalculateContainer } from './components'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  formControl: {\r\n    // margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const initData = {\r\n    carPrice: 0, borrowingPrice: 0, prepayPercent: 0,\r\n  }\r\n  const [data, setData] = useState<{ carPrice: number; borrowingPrice: number; prepayPercent: number }>(initData);\r\n\r\n  const columns = [\r\n    {\r\n      key: 'period', title: 'period'\r\n    },\r\n  ]\r\n\r\n  function createData(period: number, recurring_number: number, interest: number, origin: number, debt: number) {\r\n    return { period, recurring_number, interest, origin, debt };\r\n  }\r\n\r\n  let rows = [\r\n    createData(1, 0, 0, 0, 0),\r\n  ]\r\n\r\n  function refreshCalculate() {\r\n\r\n  }\r\n\r\n  let years = [\r\n    { value: 1, name: '1 năm (12 tháng)' },\r\n    { value: 2, name: '2 năm (24 tháng)' },\r\n    { value: 3, name: '3 năm (36 tháng)' },\r\n    { value: 4, name: '4 năm (48 tháng)' },\r\n    { value: 5, name: '5 năm (60 tháng)' },\r\n    { value: 6, name: '6 năm (72 tháng)' },\r\n    { value: 7, name: '7 năm (84 tháng)' },\r\n  ]\r\n\r\n  let onChangeField = (e: React.ChangeEvent<{ name: string, value: unknown }>) => {\r\n    const name = e.target.name as keyof typeof data;\r\n    let value: number = Number(e.target.value);\r\n    setData({ ...data, [name]: value });\r\n    refreshCalculate();\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container>\r\n      <Box my={4}>\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n          BẢNG MINH HỌA GỐC VÀ LÃI PHẢI TRẢ\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n          SẢN PHẨM TRUYỀN THỐNG - THANH TOÁN GỐC LÃI  HÀNG THÁNG\r\n        </Typography>\r\n        <TableCalculateContainer />\r\n      </Box>\r\n      <Copyright />\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        quochuydev\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}.\r\n    </Typography>\r\n  );\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import { BaseAction, TableCalculate, PeriodLine } from '../common'\r\nimport * as _ from 'lodash';\r\n\r\nexport type TableCalculateState = TableCalculate;\r\n\r\nexport const tableCalculateReducer = (\r\n  state: TableCalculateState = {\r\n    month: 36,\r\n    carPrice: 1200000000,\r\n    borrowingPrice: 240000000,\r\n    prepayPercent: 0,\r\n    rows: [],\r\n    precentBankBefore: 0.699,\r\n    precentBankAfter: 0.1085,\r\n    discountMonths: 6\r\n  },\r\n  action: BaseAction\r\n) => {\r\n  switch (action.type) {\r\n    case 'CALCULATE_COMPLETED':\r\n      let data = { ...state, ...action.payload };\r\n      data.rows = [];\r\n      if (!data.carPrice) {\r\n        data.prepayPercent = 0;\r\n      } else {\r\n        console.log(action.payload)\r\n        if (action.payload['prepayPercent']) {\r\n          data.borrowingPrice = (data.prepayPercent * data.carPrice) / 100;\r\n        }\r\n        if (_.isEmpty(action.payload) || action.payload['borrowingPrice'] || action.payload['carPrice']) {\r\n          data.prepayPercent = (data.borrowingPrice / data.carPrice) * 100;\r\n        }\r\n      }\r\n      let pricePerMonth = data.borrowingPrice / data.month;\r\n\r\n      data.rows = [createData(0, 0, 0, 0, data.borrowingPrice)];\r\n      for (let i = 1; i <= data.month; i++) {\r\n        let data_row = {\r\n          precentBank: 0, debt_last: 0, interest: 0, recurring_number: 0, origin: 0, debt: 0,\r\n        };\r\n        if (i <= data.discountMonths) {\r\n          data_row.precentBank = 0.0699;\r\n        } else {\r\n          data_row.precentBank = 0.1085;\r\n        }\r\n        data_row.debt_last = data.rows[i - 1]['debt'];\r\n        data_row.interest = data_row.debt_last * data_row.precentBank / 12;\r\n\r\n        data_row.origin = pricePerMonth;\r\n        if (i == data.month) {\r\n          data_row.origin = data_row.debt_last;\r\n        }\r\n\r\n        data_row.recurring_number = data_row.interest + data_row.origin;\r\n        data_row.debt = data_row.debt_last - data_row.origin;\r\n        data_row.debt = roundNumber(data_row.debt);\r\n\r\n        let row = createData(i, roundNumber(data_row.recurring_number), roundNumber(data_row.interest), roundNumber(data_row.origin), data_row.debt);\r\n        data.rows.push(row);\r\n      }\r\n      return data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction roundNumber(input: number) {\r\n  return Math.round(input * 1) / 1;\r\n}\r\n\r\nfunction createData(period: number, recurring_number: number, interest: number, origin: number, debt: number) {\r\n  return { period, recurring_number, interest, origin, debt };\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport {\r\n  numberCollectionReducer,\r\n  NumberCollectionState,\r\n} from './number-collection.reducer';\r\n\r\nimport {\r\n  tableCalculateReducer,\r\n  TableCalculateState,\r\n} from './table-calculate.reducer';\r\n\r\nexport interface State {\r\n  numberCollection: NumberCollectionState;\r\n  tableCalculate: TableCalculateState;\r\n}\r\n\r\nexport const rootReducers = combineReducers<State>({\r\n  numberCollection: numberCollectionReducer,\r\n  tableCalculate: tableCalculateReducer,\r\n});","import { BaseAction } from '../common'\r\n\r\nexport type NumberCollectionState = number[];\r\n\r\nexport const numberCollectionReducer = (\r\n  state: NumberCollectionState = [0],\r\n  action: BaseAction\r\n) => {\r\n  switch (action.type) {\r\n    case 'GET_NUMBER_REQUEST_COMPLETED':\r\n      return [...state, action.payload];\r\n  }\r\n  return state;\r\n};","let initialNumber = 0;\r\n\r\nexport const generateNewNumber = (): Promise<number> => {\r\n  const promise = new Promise<number>(resolve => {\r\n    initialNumber += 1;\r\n    resolve(initialNumber);\r\n  });\r\n\r\n  return promise;\r\n};","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { numberRequestCompletedAction } from '../actions';\r\nimport { generateNewNumber } from '../api';\r\n\r\nexport function* watchNewGeneratedNumberRequestStart() {\r\n  yield takeEvery(\r\n    'GET_NUMBER_REQUEST_START',\r\n    requestNewGeneratedNumber\r\n  );\r\n}\r\n\r\nfunction* requestNewGeneratedNumber(e: any) {\r\n  switch (e.type) {\r\n    case 'GET_NUMBER_REQUEST_START':\r\n      const generatedNumber = yield call(generateNewNumber);\r\n      yield put(numberRequestCompletedAction(generatedNumber));\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}","import { BaseAction } from './common';\r\n\r\nexport const numberRequestCompletedAction = (\r\n  numberGenerated: number\r\n): BaseAction => ({\r\n  type: 'GET_NUMBER_REQUEST_COMPLETED',\r\n  payload: numberGenerated,\r\n});","import { call, put, takeEvery } from 'redux-saga/effects';\r\n\r\nexport function* watchCalculate() {\r\n  yield takeEvery(\r\n    'CALCULATE',\r\n    foo\r\n  );\r\n}\r\n\r\nfunction* foo(e: any) {\r\n  switch (e.type) {\r\n    case 'CALCULATE':\r\n      yield put({\r\n        type: 'CALCULATE_COMPLETED',\r\n        payload: e.payload,\r\n      });\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}","import { all, fork } from 'redux-saga/effects';\r\nimport { watchNewGeneratedNumberRequestStart } from './number-collection.sagas';\r\nimport { watchCalculate } from './table-calculate.sagas';\r\n\r\nexport const rootSaga = function* root() {\r\n  yield all([fork(watchNewGeneratedNumberRequestStart)]);\r\n  yield all([fork(watchCalculate)]);\r\n};","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { rootReducers } from './reducers';\r\nimport { rootSaga } from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancer = compose;\r\n\r\nexport const store = createStore(\r\n  rootReducers,\r\n  {},\r\n  composeEnhancer(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}